/*

@author
_      _          _                 _      _
\\    // /\    | | \  |     |    /\ \\    //     
 \\  // /__\   | |_/  |_____|   /__\ \\  //
  \\// /    \  | | \  |     |  /    \ \\//
   \/ /      \ | |_/  |     | /      \ \/
    
*/

#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef unsigned long long int ul;
#define fr(i,start,end, inc) for(ll i=(start); i<(end); i+=inc)
#define rf(i,start,end, dec) for(ll i=(end-1); i>=(start); i-=dec)
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define abcd pair<ll, ll>
#define pq abcdiority_queue
#define all(v) v.begin(), v.end()
#define alla(arr,n) arr, arr+n
#define fsync ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define MAX 1000000007;
/*
class CompareDist
{
public:
    bool operator()(pair<ll, ll> n1,pair<ll, ll> n2) {
        return n1.first > n2.first || (n1.first == n2.first && n1.second > n2.second);
    }
};


inline ll power(ll x, ll y, ll p)
{
    ll res = 1;      // Initialize result
 
    x = x % p;  // Update x if it is more than or 
                // equal to p
 
    while (y > 0)
    {
        // If y is odd, multiply x with result
        if (y & 1)
            res = (res*x) % p;
 
        // y must be even now
        y = y>>1; // y = y/2
        x = (x*x) % p;  
    }
    return res;
}

ll gcd(ll a, ll b) 
{ 
    if (a == b) 
        return a;  
    if (a > b) 
        return gcd(a-b, b); 
    return gcd(a, b-a); 
}  
ll lcm(ll a, ll b) 
{ 
    return (a*b)/gcd(a, b); 
}
void inline ansfunc(bool sach[],ll furra[],bool sacha[],vector<ll> vec[],ll val ,ll point)
{   
    sacha[point] = true;
    if(vec[point].size() == 1)
        sach[point] = true;
    fr(i,0,vec[point].size(),1)
    {   
        if(sacha[(vec[point][i])] == true)
            continue;
        if(val==0)
        {
            furra[(vec[point][i])] = 1;
            ansfunc(sach,furra,sacha,vec,1,vec[point][i]);
        }
        else
        {
            furra[(vec[point][i])] = 0;
            ansfunc(sach,furra,sacha,vec,0,vec[point][i]);
        }
    }
}

bool inline isPrime(ll n) 
{ 
    // Corner cases 
    if (n <= 1)  return false; 
    if (n <= 3)  return true; 
  
    // This is checked so that we can skip  
    // middle five numbers in below loop 
    if (n%2 == 0 || n%3 == 0) return false; 
  
    for (ll i=5; i*i<=n; i=i+6) 
        if (n%i == 0 || n%(i+2) == 0) 
           return false; 
  
    return true; 
}*/


int main()
{
    fsync
    ll test=1;
    //cin >> test;
    while(test--)
    {      
        string s = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";
        ll n = s.length();
        ll temp=1;
        ll ma=0;
        fr(i,0,(n-13),1)
        {   
            temp=1;
            fr(j,i,i+13,1)
                temp *= (ll)(s[j]-48);
            if(temp>ma)
                ma=temp;
        }
        cout << ma << "\n";
    }
}

